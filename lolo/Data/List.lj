{"declarations":
  [ {"import": "Prim.Int", "as": "I"}
  , {"import": "Data.Bool", "as": "B"}
  , {"import": "Data.Function"}
  , {"import": "Data.Maybe", "as": "M"}
  , {"import": "Data.Tuple", "as": "T"}

  , {"data": "List", "=": [["Nil", 0], ["Cons", 2]]}

  , {"func": ["singleton", "x"], "=": ["Cons", "x", "Nil"]}

  , {"func": ["map", "f", "xs"], "=":
    {"cased": "xs", "of":
      [["Nil", "Nil"],
       ["Cons", "x", "rest",
          ["Cons", ["f", "x"], ["map", "f", "rest"]]]]}}

  , {"func": ["foldr", "f", "z", "xs"], "=":
    {"cased": "xs", "of":
      [["Cons", "x", "rest", ["f", "x", ["foldr", "f", "z", "rest"]]],
       ["Nil", "z"]]}}

  , {"func": ["foldl", "f", "z", "xs"], "=":
    {"cased": "xs", "of":
      [["Cons", "x", "rest", ["foldl", "f", ["f", "z", "x"], "rest"]],
       ["Nil", "z"]]}}

  , {"func": ["unfoldr", "f", "z"], "=":
    {"cased": ["f", "z"], "of":
      [["M.Just", "x", ["Cons", "x", ["unfoldr", "f", "x"]]],
       ["M.Nothing", "Nil"]]}}

  , {"func": ["maybeToList", "mx"], "=":
    ["M.maybe", "Nil", "singleton", "mx"]}

  , {"func": ["reverse"], "=":
    ["foldl", ["Data.Function.flip", "Cons"], "Nil"]}

  , {"func": ["intSum", "ns"], "=":
    ["foldr", "I.add", 0, "ns"]}

  , {"func": ["length", "xs"], "=":
    ["intSum", ["map", ["Data.Function.const", 1], "xs"]]}

  , {"func": ["append", "xs", "ys"], "=":
    ["foldr", "Cons", "ys", "xs"]}

  , {"func": ["concat", "xss"], "=":
    ["foldr", "append", "Nil", "xss"]}

  , {"func": ["eq", "elemEq", "xs", "ys"], "=":
    {"cased": "xs", "of":
      [["Cons", "x", "xrest",
          {"cased": "ys", "of":
            [["Cons", "y", "yrest",
              ["B.and",
                ["elemEq", "x", "y"],
                ["eq", "elemEq", "xrest", "yrest"]]],
             ["Nil", "B.False"]]}],
       ["Nil",
          {"cased": "ys", "of":
            [["Cons", "_", "_", "B.False"],
             ["Nil", "B.True"]]}]]}}

  , {"func": ["intersperse", "x", "ys"], "=":
    {"cased": "ys", "of":
      [["Nil", "Nil"],
       ["Cons", "y", "rest",
          {"cased": "rest", "of":
            [["Nil", ["Cons", "y", "Nil"]],
             ["Cons", "_", "_",
                ["Cons", "y",
                ["Cons", "x",
                ["intersperse", "x", "rest"]]]]]}]]}}

  , {"func": ["intercalate", "xs", "xss"], "=":
    ["concat", ["intersperse", "xs", "xss"]]}

  , {"func": ["from", "n"], "=":
    ["Cons", "n", ["from", ["I.add", 1, "n"]]]}

  , {"func": ["gt", "a", "b"], "=": ["B.not", ["I.le", "b", "a"]]}

  , {"func": ["replicate", "n", "x"], "=":
    ["map", ["const", "x"], ["takeWhile", ["gt", "n"], ["from", 0]]]}

  , {"func": ["takeWhile", "f", "xs"], "=":
    {"cased": "xs", "of":
      [["Nil", "Nil"],
       ["Cons", "x", "rest",
        {"cased": ["f", "x"], "of":
          [["B.True", ["Cons", "x", ["takeWhile", "f", "rest"]]],
           ["B.False", "Nil"]]}]]}}

  , {"func": ["zip", "as", "bs"], "=":
    {"cased": "as", "of":
      [["Nil", "Nil"],
       ["Cons", "a", "as",
          {"cased": "bs", "of":
            [["Nil", "Nil"],
             ["Cons", "b", "bs",
                ["Cons",
                  ["T.Tuple2", "a", "b"],
                  ["zip", "as", "bs"]]]]}]]}}

  , {"func": ["take", "n", "xs"], "=":
    {"casei": "n", "of":
      [[0, "Nil"],
       ["n",
        {"cased": "xs", "of":
          [["Nil", "Nil"],
           ["Cons", "x", "tail",
              ["Cons", "x", ["take", ["I.add", -1, "n"], "tail"]]]]}]]}}

  , {"func": ["drop", "n", "xs"], "=":
    {"casei": "n", "of":
      [[0, "xs"],
       ["n",
        {"cased": "xs", "of":
          [["Nil", "Nil"],
           ["Cons", "_", "tail",
              ["drop", ["I.add", -1, "n"], "tail"]]]}]]}}

  , {"func": ["splitAt", "n", "xs"], "=":
    {"casei": "n", "of":
      [["n", ["T.Tuple2", ["take", "n", "xs"], ["drop", "n", "xs"]]]]}}

  ]}
